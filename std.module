<?php

use Drupal\node\Entity\NodeType;
use Drupal\Core\EntityInterface;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\Url;
use Drupal\views\Entity\View;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;
use Drupal\views\ViewEntityInterface;


/**
 * Implements hook_install().
 */
function std_install() {

  // Load the field configuration.
  //\Drupal::configFactory()->getEditable('field.field.node.data_dictionary.field_data_dictionary_file')->save();
  // Load the content type configuration.
  //\Drupal::configFactory()->getEditable('node.type.data_dictionary')->save();

}

/**
 * Implements hook_uninstall().
 */
function std_uninstall() {

  // Specify the ID of the view you want to delete.
  //$view_id = 'semanticdatadictionary_view';
  // Load the view if it exists.
  //$view = \Drupal\views\Entity\View::load($view_id);
  //if ($view) {
    // Delete the view.
  //  $view->delete();
  //}
}


/**
 *  Implements hook_entity_operations().
 */
function std_node_operations(EntityInterface $entity) {
  $operations = [];
  $url = Url::fromRoute('sem.search');
  $operations['ingest'] = [
    'title' => t('Ingest'),
    'weight' => 60,
    'url' => $url,
  ];
  return $operations;
}


/**
 * Implements hook_entity_type_alter().
 */
//function std_entity_type_alter(array &$entity_types) {
  // Add a custom operation for nodes.
//  if (isset($entity_types['node'])) {
//    dpm($entity_types['node']);
//    $entity_types['node']->setHandlerClass('operations', 'Drupal\std\IngestOperation');
//  }
//}

/**
 * Implements hook_theme
 */
function std_theme($existing, $type, $theme, $path) 
{
    return [
        'list-page' => [
            'variables' => array(
                'items' => array(          
                    'offset' => '',
                    'first' => '',
                    'last' => '',
                    'previous' => '',
                    'next' => '',
                    'links' => array(),
                    'title' => ''
                )
            )
        ],
    ];
}


